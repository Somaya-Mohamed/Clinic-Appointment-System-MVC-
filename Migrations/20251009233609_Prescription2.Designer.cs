// <auto-generated />
using System;
using Clinic_Appointment_System.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clinic_Appointment_System.Migrations
{
    [DbContext(typeof(ClinicDbContext))]
    [Migration("20251009233609_Prescription2")]
    partial class Prescription2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Clinic_Appointment_System.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<DateTime>("AppointmentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Prescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("AppointmentId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            AppointmentId = 1,
                            AppointmentDateTime = new DateTime(2025, 10, 6, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            Notes = "فحص دوري",
                            PatientId = 1,
                            Status = 0
                        },
                        new
                        {
                            AppointmentId = 2,
                            AppointmentDateTime = new DateTime(2025, 10, 7, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            Notes = "استشارة",
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            AppointmentId = 3,
                            AppointmentDateTime = new DateTime(2025, 10, 4, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            Notes = "متابعة",
                            PatientId = 3,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Clinic_Appointment_System.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DoctorId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            DoctorId = 1,
                            Name = "د. سالي ماهر",
                            Phone = "0123456789",
                            Specialization = "باطنة"
                        },
                        new
                        {
                            DoctorId = 2,
                            Name = "د. سارة علي",
                            Phone = "0987654321",
                            Specialization = "أطفال"
                        },
                        new
                        {
                            DoctorId = 3,
                            Name = "د. محمد حسن",
                            Phone = "0112233445",
                            Specialization = "جراحة"
                        });
                });

            modelBuilder.Entity("Clinic_Appointment_System.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            PatientId = 1,
                            Address = "القاهرة",
                            BirthDate = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "علي أحمد",
                            Phone = "0123456789"
                        },
                        new
                        {
                            PatientId = 2,
                            Address = "الجيزة",
                            BirthDate = new DateTime(1985, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "فاطمة خالد",
                            Phone = "0987654321"
                        },
                        new
                        {
                            PatientId = 3,
                            Address = "الإسكندرية",
                            BirthDate = new DateTime(2000, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "خالد محمود",
                            Phone = "0112233445"
                        },
                        new
                        {
                            PatientId = 4,
                            Address = "المنصورة",
                            BirthDate = new DateTime(1995, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "منى سعيد",
                            Phone = "0129988776"
                        },
                        new
                        {
                            PatientId = 5,
                            Address = "أسيوط",
                            BirthDate = new DateTime(2010, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "يوسف عمر",
                            Phone = "0155544332"
                        });
                });

            modelBuilder.Entity("Clinic_Appointment_System.Models.Prescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("Dosage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MedicationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Prescriptions");
                });

            modelBuilder.Entity("Clinic_Appointment_System.Models.Appointment", b =>
                {
                    b.HasOne("Clinic_Appointment_System.Models.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clinic_Appointment_System.Models.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Clinic_Appointment_System.Models.Prescription", b =>
                {
                    b.HasOne("Clinic_Appointment_System.Models.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentId");

                    b.HasOne("Clinic_Appointment_System.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clinic_Appointment_System.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Clinic_Appointment_System.Models.Doctor", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Clinic_Appointment_System.Models.Patient", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
